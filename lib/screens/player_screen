// player_screen.dart
class PlayerScreen extends StatefulWidget {
  @override
  _PlayerScreenState createState() => _PlayerScreenState();
}

class _PlayerScreenState extends State<PlayerScreen> {
  late Mood selectedMood;
  List<dynamic> tracks = [];
  int currentIndex = 0;

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    selectedMood = ModalRoute.of(context)!.settings.arguments as Mood;
    _fetchRecommendations();
  }

  Future<void> _fetchRecommendations() async {
    final response = await http.get(
      Uri.parse('https://api.spotify.com/v1/recommendations?seed_genres=$selectedMood.genres'),
      headers: {'Authorization': 'Bearer YOUR_ACCESS_TOKEN'},
    );

    setState(() {
      tracks = json.decode(response.body)['tracks'];
    });
  }

  void _playOnSpotify(String uri) async {
    await launchUrl(Uri.parse(uri));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: tracks.isEmpty
          ? Center(child: CircularProgressIndicator())
          : CarouselSlider.builder(
              itemCount: tracks.length,
              itemBuilder: (context, index, _) {
                final track = tracks[index];
                return Column(
                  children: [
                    Expanded(
                      child: GestureDetector(
                        onVerticalDragEnd: (details) {
                          if (details.primaryVelocity! > 0) {
                            // Swipe down
                          } else if (details.primaryVelocity! < 0) {
                            // Swipe up
                          }
                        },
                        child: Image.network(track['album']['images'][0]['url']),
                      ),
                    ),
                    Text(track['name'], style: TextStyle(fontSize: 24)),
                    Text(track['artists'][0]['name'], style: TextStyle(fontSize: 18)),
                    IconButton(
                      icon: Icon(Icons.play_circle_fill, size: 50),
                      onPressed: () => _playOnSpotify(track['uri']),
                    ),
                  ],
                );
              },
            ),
    );
  }
}